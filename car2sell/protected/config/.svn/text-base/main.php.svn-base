<?php

// uncomment the following to define a path alias
// Yii::setPathOfAlias('local','path/to/local-folder');

// This is the main Web application configuration. Any writable
// CWebApplication properties can be configured here.

	// preloading 'log' component

if(strpos($_SERVER['REQUEST_URI'],'/staff')!==false || strpos($_SERVER['REQUEST_URI'],'/admin')!==false || strpos($_SERVER['REQUEST_URI'],'/settings/save')!==false || isset($_GET['test'])){ 
		$preload = array('log','bootstrap');
	}else{
		$preload = array('log');
}

return array(
	'basePath'=>dirname(__FILE__).DIRECTORY_SEPARATOR.'..',
	'name'=>'CARS2SELL',

	'language'=>'ru',
	'defaultController'=>'post',
	
     'preload' => $preload,
	//'preload'=>array(
	//	'log',
		//'bootstrap', // preload the bootstrap component
	//),

	// autoloading model, helpers and component classes
	'import'=>array(
		'application.models.*',
		'application.components.*',
		'application.helpers.*',
	),

	'modules'=>array(
		// uncomment the following to enable the Gii tool
		
		'gii'=>array(
			'class'=>'system.gii.GiiModule',
			'password'=>false,
		 	// If removed, Gii defaults to localhost only. Edit carefully to taste.
			'ipFilters'=>array('127.0.0.1','::1','localhost'),
		),
		
        'message' => array(
                'userModel' => 'User',
                'getNameMethod' => 'getFullName',
                'getSuggestMethod' => 'getSuggest',
            ),
       
		
	),

	// application components
	'components'=>array(
		
		'image'=>array(
          'class'=>'application.extensions.image.CImageComponent',
            // GD or ImageMagick
            'driver'=>'GD',
            // ImageMagick setup path
            //'params'=>array('directory'=>'/opt/local/bin'),
        ),
        //'simpleImage'=>array(
        //                'class' => 'application.extensions.CSimpleImage',
        //), 
		'bootstrap'=>array(
			'class'=>'ext.bootstrap.components.Bootstrap', // assuming you extracted bootstrap under extensions
		),
		'user'=>array(
			// enable cookie-based authentication
			'class'=>'WebUser',
			'allowAutoLogin'=>true,
			'loginUrl'=>array('account/login'),
		),
		// uncomment the following to enable URLs in path-format
		
		'urlManager'=>array(
			'urlFormat'=>'path',
			'rules'=>array(
				
				'gii'=>'gii',
				'gii/<controller:\w+>'=>'gii/<controller>',
				'gii/<controller:\w+>/<action:\w+>'=>'gii/<controller>/<action>',
     
			    'cont/<slug:\w+>'=>'content/view',
				//'auto/<id:\w+>'=>'post/show',
                'rss/'=>'post/rss',
				
				array(
					'class' => 'application.components.CarUrlRule',
					'connectionID' => 'db',
				),
					
				'<controller:\w+>/<action:\w+>/<id:\d+>/key/<key:\w+>'=>'<controller>/<action>',
				'<controller:\w+>/<id:\d+>'=>'<controller>/view',
				'<controller:\w+>/page<page:\d+>'=>'<controller>/view/',
				'<controller:\w+>/<action:\w+>/<id:\d+>'=>'<controller>/<action>',
				'<controller:\w+>/<action:\w+>'=>'<controller>/<action>',
				
				
				
				
			),
			'showScriptName'=>false,
		),
		
		/*'db'=>array(
			'connectionString' => 'sqlite:'.dirname(__FILE__).'/../data/testdrive.db',
		),*/
		// uncomment the following to use a MySQL database
		'db'=>array(
			'connectionString' => 'mysql:host=localhost;dbname=cars',
			'emulatePrepare' => true,
			'username' => 'cars',
			'password' => 'dimac777',
			'charset' => 'utf8',
			'enableParamLogging' => true,
		),
		'errorHandler'=>array(
			// use 'site/error' action to display errors
            'errorAction'=>'site/error',
        ),
		'log'=>array(
			'class'=>'CLogRouter',
			'routes'=>array(
				array(
					
					'class'=>'CFileLogRoute',
					//'class'=> ($_SERVER['REMOTE_ADDR']=='109.254.67.132')?'CWebLogRoute':'CFileLogRoute',
					//'levels'=>'error, warning',
				),
				// uncomment the following to show log messages on web pages
				/*
				array(
					'class'=>'CWebLogRoute',
				),
				*/
			),
		),
		'email'=>array(
        	'class'=>'application.extensions.email.Email',
			//set to php later
            'delivery'=>'php', //Will use the php mailing function.  

        	//May also be set to 'debug' to instead dump the contents of the email into the view
        ),
		'ip2city'=>array(
        	'class'=>'application.extensions.ip2city.Ip2city',
			//set to php later
           // 'delivery'=>'php', //Will use the php mailing function.  

        	//May also be set to 'debug' to instead dump the contents of the email into the view
        ),
		

    'ePdf' => array(
        'class'         => 'ext.yii-pdf.EYiiPdf',
        'params'        => array(
			 'mpdf'     => array(
                'librarySourcePath' => 'application.vendors.mpdf.*',
                'constants'         => array(
                    '_MPDF_TEMP_PATH' => Yii::getPathOfAlias('application.runtime'),
                ),
                'class'=>'mpdf', // the literal class filename to be loaded from the vendors 
				 ),
            'HTML2PDF' => array(
                'librarySourcePath' => 'application.vendors.html2pdf.*',
                'classFile'         => 'html2pdf.class.php', // For adding to Yii::$classMap
				'language'    => 'en',
				'languÐµ'    => 'en',
				'orientation' => 'L',
				'sens' => 'L',
				'unicode'     => true, // TRUE means clustering the input text IS unicode (default = true)
                'encoding'    => 'UTF-8', // charset encoding; Default is UTF-8
                   
                /*'defaultParams'     => array( // More info: http://wiki.spipu.net/doku.php?id=html2pdf:en:v4:accueil
                    'orientation' => 'P', // landscape or portrait orientation
                    'format'      => 'A4', // format A4, A5, ...
                    'language'    => 'en', // language: fr, en, it ...
                    'unicode'     => true, // TRUE means clustering the input text IS unicode (default = true)
                    'encoding'    => 'UTF-8', // charset encoding; Default is UTF-8
                    'marges'      => array(5, 5, 5, 8), // margins by default, in order (left, top, right, bottom)
                )*/
            )
        ),
    ),
    //...

	),

	// application-level parameters that can be accessed
	// using Yii::app()->params['paramName']
	'params'=>array(
		// this is used in contact page
		//'adminEmail'=>'dmi2nfc@gmail.com',
		'baseServerName'=>'.fdmoz.org',
		//'listPerPage'=> 5,
        //'numberOfRssItem'=>20,
        'showSubscription'=>FALSE,
		//'cost_of_top'=>100,
		//'cost_of_urgent'=>100,

		
	),
);
